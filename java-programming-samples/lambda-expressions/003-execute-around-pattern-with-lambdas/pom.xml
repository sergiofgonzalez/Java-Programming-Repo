<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.joolzminer</groupId>
		<artifactId>lambda-expressions</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

    <artifactId>003-execute-around-pattern-with-lambdas</artifactId>

    <packaging>jar</packaging>

    <name>|-- 003-execute-around-pattern-with-lambdas</name>
	<description>	
        Keywords:
            + Lambdas, lambda expressions
            + Execute Around pattern
            + Anonymous classes

        This project includes a simple example that demonstrates a practical example
        of lambda expressions to implement parameterized behavior.
            
        ExecuteAroundLambdasRunner:
            Implements Execute Around Pattern consisting on providing a method
            that accepts an implementation of a Functional Interface that do
            the processing logic and within the method, the setup and cleanup tasks
            are separated (like Spring's Template object).
            In particular, the method takes responsibility for the opening and closing
            of a file, and the implementation of the functional interface handles the
            processing of the file (read one or several lines, etc.)
	</description>
	
    <properties>
        <!-- JDK compiler options -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>	
</project>

