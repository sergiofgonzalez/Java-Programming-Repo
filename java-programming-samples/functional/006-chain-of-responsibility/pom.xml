<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.joolzminer</groupId>
		<artifactId>functional</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

    <artifactId>006-chain-of-responsibility</artifactId>

    <packaging>jar</packaging>

    <name>|-- 006-chain-of-responsibility</name>
	<description>	
        Keywords:
            + Functional Programming, Java 8
            + Chain of Responsibility Pattern

        This project includes a very simple example that illustrates how to implement
        the Chain of Responsibility pattern using lambdas.
            
        EmailProcessingRunner:
            In the example, a chain of responsibility is developed to include the header in a text,
            perform the spell checking and include the trailer. 
            The implementation is performed using the old school technique of defining an abstract
            class and use subclassing for the implementation, and also the new way using lambdas.
	</description>
	
    <properties>
        <!-- JDK compiler options -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>	
</project>

