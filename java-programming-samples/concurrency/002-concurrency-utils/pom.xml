<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.joolzminer</groupId>
		<artifactId>concurrency</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

    <artifactId>002-concurrency-utils</artifactId>

    <packaging>jar</packaging>

    <name>|-- 002-concurrency-utils</name>
  	
	<description>	
		Keywords:
		+ Atomic variables
		+ Callable
		+ Future
		+ Executor, ExecutorService

		This project includes very simple examples involving Concurrency Utilities.
		
		AtomicCounterDemo:
			Demonstrates how to implement a thread safe counter class using an
			AtomicInteger. The application creates two threads: one that increments
			the counter for a given amount of times and another that decrements the 
			counter for the same amount of times. Using a thread safe counter, the net 
			result will always be 0, while using a non-thread safe counter would lead 
			to inconsistent results.
			
		ExecutorDemo/ImageSearchTask:
			Demonstrates how to use an executor service to crawl the filesystem in
			search of .jpg files.	
		
		FileCounter:
			Demonstrates how to use Callable and Future. The application creates a
			Callable that counts the file under a given directory. The main application
			submits two of this Callables in parallel to count the files in two
			directories.	
	</description>
</project>

